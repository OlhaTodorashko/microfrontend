name: deploy-container on push

on:
  push:
    branches:
      - main
#      - 'dev-*' dev-new dev-this-is-new
#      - 'feat/**' feat/new feat/new/button; ** allows many `/`
    paths:
      - 'projects/**'
  workflow_dispatch: # allow manual trigger workflow. Other: repository_dispatch (REST API trigger workflow), schedule (workflow is scheduled), workflow_call (can be called by other workflow) - github actions events

#defaults:
#  run:
#    working-directory: projects/container

permissions:
  contents: read
  pages: write
#  id-token: write # allows the workflow to request an OIDC (OpenID Connect) token, authenticate to external services (e.g., AWS, Azure, GCP) without secrets

env:
  PRODUCTION_DOMAIN: ${{ secrets.PRODUCTION_DOMAIN }}

jobs:
  build-projects:
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        project-name: ['marketing', 'auth', 'dashboard']
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4  # Uses existed GitHub Action | actions/checkout@v4 https://github.com/marketplace/actions/checkout
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Install dependents and build
        working-directory: projects/${{ matrix.project-name }}
        run: |
          npm ci
          npm run build
      - name: Upload artifact
        id: upload-artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist-files-${{ matrix.project-name }} # will be used in step - actions/download-artifact@v4
          path: projects/${{ matrix.project-name }}/dist
      - name: Upload artifact report
        if: ${{ failure() && steps.run-upload-artifact.outcome == 'failure' }}
        run: |
          ls projects
          ls projects/${{ matrix.project-name }}
          ls projects/${{ matrix.project-name }}/dist
  build-container:
    runs-on: ubuntu-latest
    outputs:
      main-js-file: ${{ steps.publish.outputs.file-name }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Install dependents and build
        working-directory: projects/container
        run: |
          npm ci # ci - uses package-lock.json dependencies or use `npm install`
          npm run build
      - name: Publish js file name
        id: publish
        run: find projects/container/dist/container/latest/main.*.js -type f -execdir echo 'file-name={}' >> $GITHUB_OUTPUT ';'
      - name: Upload artifact
        id: run-upload-artifact-container
        uses: actions/upload-artifact@v4
        with:
          name: dist-files-container
          path: projects/container/dist/container/latest/
      - name: Upload artifact report
        if: ${{ failure() && steps.run-upload-artifact-container.outcome == 'failure' }}
        run: |
          echo "${{ needs.build-container.outputs.main-js-file }}"
          ls projects
          ls projects/container
          ls projects/container/dist
          ls projects/container/container/latest/
  deploy:
    needs: [ build-projects, build-container ]
    runs-on: ubuntu-latest
    environment:
      name: github-pages
    steps:
      - name: Setup GitHub Pages
        uses: actions/configure-pages@v5
      - name: Marketing - get artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-files-marketing
      - name: Auth - get artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-files-auth
      - name: Dashboard - get artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-files-dashboard
      - name: Container - get artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-files-container
      - name: List generated files
        run: |
          ls
      - name: Output file name
        run: echo "${{ needs.build-container.outputs.main-js-file }}"
      - name: Load pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "./"
      - name: Deploy on GitHub Pages
        uses: actions/deploy-pages@v4
  failure-report:
    needs: [ deploy ]
    if: ${{ failure() }}
    runs-on: ubuntu-latest
    steps:
      - name: Output information
        run: |
          echo "Something went wrong"
          echo "${{ toJSON(github) }}"