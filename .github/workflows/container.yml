name: deploy-container on push

on: # trigger on [push, workflow_dispatch]
  push:
    branches:
      - main
#      - 'dev-*' dev-new dev-this-is-new
#      - 'feat/**' feat/new feat/new/button; ** allows many `/`
    paths:
      - 'projects/**'
  workflow_dispatch: # allow manual trigger workflow. Other: repository_dispatch (REST API trigger workflow), schedule (workflow is scheduled), workflow_call (can be called by other workflow) - github actions events

defaults:
  run:
    working-directory: projects/container

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build-marketing:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4  # Uses existed GitHub Action | actions/checkout@v4 https://github.com/marketplace/actions/checkout
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Install dependents and build
        working-directory: projects/marketing
        run: |
          npm install
          npm run build
        env:
          PRODUCTION_DOMAIN: ${{ secrets.PRODUCTION_DOMAIN }}
      - name: Debug upload contents
        run: |
          echo "Listing dist contents:"
          ls
          ls config/
          ls dist
          ls -la ./dist
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist-files-marketing
          path: ./dist
  build-auth:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4  # Uses existed GitHub Action | actions/checkout@v4 https://github.com/marketplace/actions/checkout

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Auth - Install dependents and build
        working-directory: projects/auth
        run: |
          npm ci
          npm run build
        env:
          PRODUCTION_DOMAIN: ${{ secrets.PRODUCTION_DOMAIN }}
      - name: Debug upload contents
        run: |
          echo "Listing dist contents:"
          ls -la ./dist
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist-files-auth
          path: ./dist
  build-dashboard:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4  # Uses existed GitHub Action | actions/checkout@v4 https://github.com/marketplace/actions/checkout

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Dashboard - Install dependents and build
        working-directory: projects/dashboard
        run: |
          npm ci
          npm run build
        env:
          PRODUCTION_DOMAIN: ${{ secrets.PRODUCTION_DOMAIN }}
      - name: Debug upload contents
        run: |
          echo "Listing dist contents:"
          ls -la ./dist
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist-files-dashboard
          path: ./dist
  build-container: # name of job
    runs-on: ubuntu-latest # env
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4  # Uses existed GitHub Action | actions/checkout@v4 https://github.com/marketplace/actions/checkout
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Install dependents and build
        run: |
          npm ci # ci - uses package-lock.json dependencies or use `npm install`
          npm run build
        env:
          PRODUCTION_DOMAIN: ${{ secrets.PRODUCTION_DOMAIN }}
      - name: List generated files
        run: |
          ls dist/container/latest
      - name: Debug upload contents
        run: |
          echo "Listing dist contents:"
          ls -la ./dist
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist-files-container
          path: ./dist/container/latest/
  deploy:
    needs: [ build-marketing, build-auth, build-dashboard, build-container ]
    runs-on: ubuntu-latest
    environment:
      name: github-pages
    steps:
      - name: Setup GitHub Pages
        uses: actions/configure-pages@v5
      - name: Get artifacts marketing
        uses: actions/download-artifact@v4
        with:
          name: dist-files-marketing
      - name: Get artifacts auth
        uses: actions/download-artifact@v4
        with:
          name: dist-files-auth
      - name: Get artifacts dashboard
        uses: actions/download-artifact@v4
        with:
          name: dist-files-dashboard
      - name: Get artifacts container
        uses: actions/download-artifact@v4
        with:
          name: dist-files-container
      - name: List generated files
        run: |
          ls
      - name: Load artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "./"
#          path: "projects/container/dist/container/latest/"  # or "build" for React
      - name: Deploy on GitHub Pages
        uses: actions/deploy-pages@v4